/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EducationalContent as PrismaEducationalContent,
} from "@prisma/client";

export class EducationalContentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EducationalContentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.educationalContent.count(args);
  }

  async educationalContents<T extends Prisma.EducationalContentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EducationalContentFindManyArgs>
  ): Promise<PrismaEducationalContent[]> {
    return this.prisma.educationalContent.findMany<Prisma.EducationalContentFindManyArgs>(
      args
    );
  }
  async educationalContent<T extends Prisma.EducationalContentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EducationalContentFindUniqueArgs>
  ): Promise<PrismaEducationalContent | null> {
    return this.prisma.educationalContent.findUnique(args);
  }
  async createEducationalContent<T extends Prisma.EducationalContentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EducationalContentCreateArgs>
  ): Promise<PrismaEducationalContent> {
    return this.prisma.educationalContent.create<T>(args);
  }
  async updateEducationalContent<T extends Prisma.EducationalContentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EducationalContentUpdateArgs>
  ): Promise<PrismaEducationalContent> {
    return this.prisma.educationalContent.update<T>(args);
  }
  async deleteEducationalContent<T extends Prisma.EducationalContentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EducationalContentDeleteArgs>
  ): Promise<PrismaEducationalContent> {
    return this.prisma.educationalContent.delete(args);
  }
}
