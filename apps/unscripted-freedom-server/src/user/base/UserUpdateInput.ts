/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EducationalContentUpdateManyWithoutUsersInput } from "./EducationalContentUpdateManyWithoutUsersInput";
import { ValidateNested, IsOptional, IsString, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { MarketAnalysisUpdateManyWithoutUsersInput } from "./MarketAnalysisUpdateManyWithoutUsersInput";
import { EnumUserRiskTolerance } from "./EnumUserRiskTolerance";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { StrategyUpdateManyWithoutUsersInput } from "./StrategyUpdateManyWithoutUsersInput";
import { EnumUserSubscriptionStatus } from "./EnumUserSubscriptionStatus";
import { TradeUpdateManyWithoutUsersInput } from "./TradeUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => EducationalContentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => EducationalContentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => EducationalContentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  educationalContents?: EducationalContentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => MarketAnalysisUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => MarketAnalysisUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => MarketAnalysisUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  marketAnalyses?: MarketAnalysisUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    enum: EnumUserRiskTolerance,
  })
  @IsEnum(EnumUserRiskTolerance)
  @IsOptional()
  @Field(() => EnumUserRiskTolerance, {
    nullable: true,
  })
  riskTolerance?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => StrategyUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => StrategyUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => StrategyUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  strategies?: StrategyUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    enum: EnumUserSubscriptionStatus,
  })
  @IsEnum(EnumUserSubscriptionStatus)
  @IsOptional()
  @Field(() => EnumUserSubscriptionStatus, {
    nullable: true,
  })
  subscriptionStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => TradeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TradeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TradeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  trades?: TradeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}

export { UserUpdateInput as UserUpdateInput };
