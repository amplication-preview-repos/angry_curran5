/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EducationalContentListRelationFilter } from "../../educationalContent/base/EducationalContentListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MarketAnalysisListRelationFilter } from "../../marketAnalysis/base/MarketAnalysisListRelationFilter";
import { EnumUserRiskTolerance } from "./EnumUserRiskTolerance";
import { StrategyListRelationFilter } from "../../strategy/base/StrategyListRelationFilter";
import { EnumUserSubscriptionStatus } from "./EnumUserSubscriptionStatus";
import { TradeListRelationFilter } from "../../trade/base/TradeListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => EducationalContentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EducationalContentListRelationFilter)
  @IsOptional()
  @Field(() => EducationalContentListRelationFilter, {
    nullable: true,
  })
  educationalContents?: EducationalContentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MarketAnalysisListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MarketAnalysisListRelationFilter)
  @IsOptional()
  @Field(() => MarketAnalysisListRelationFilter, {
    nullable: true,
  })
  marketAnalyses?: MarketAnalysisListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserRiskTolerance,
  })
  @IsEnum(EnumUserRiskTolerance)
  @IsOptional()
  @Field(() => EnumUserRiskTolerance, {
    nullable: true,
  })
  riskTolerance?: "Option1";

  @ApiProperty({
    required: false,
    type: () => StrategyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StrategyListRelationFilter)
  @IsOptional()
  @Field(() => StrategyListRelationFilter, {
    nullable: true,
  })
  strategies?: StrategyListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumUserSubscriptionStatus,
  })
  @IsEnum(EnumUserSubscriptionStatus)
  @IsOptional()
  @Field(() => EnumUserSubscriptionStatus, {
    nullable: true,
  })
  subscriptionStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: () => TradeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TradeListRelationFilter)
  @IsOptional()
  @Field(() => TradeListRelationFilter, {
    nullable: true,
  })
  trades?: TradeListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}

export { UserWhereInput as UserWhereInput };
