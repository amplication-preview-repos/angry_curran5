/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MarketAnalysis as PrismaMarketAnalysis } from "@prisma/client";

export class MarketAnalysisServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MarketAnalysisCountArgs, "select">
  ): Promise<number> {
    return this.prisma.marketAnalysis.count(args);
  }

  async marketAnalyses<T extends Prisma.MarketAnalysisFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MarketAnalysisFindManyArgs>
  ): Promise<PrismaMarketAnalysis[]> {
    return this.prisma.marketAnalysis.findMany<Prisma.MarketAnalysisFindManyArgs>(
      args
    );
  }
  async marketAnalysis<T extends Prisma.MarketAnalysisFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MarketAnalysisFindUniqueArgs>
  ): Promise<PrismaMarketAnalysis | null> {
    return this.prisma.marketAnalysis.findUnique(args);
  }
  async createMarketAnalysis<T extends Prisma.MarketAnalysisCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MarketAnalysisCreateArgs>
  ): Promise<PrismaMarketAnalysis> {
    return this.prisma.marketAnalysis.create<T>(args);
  }
  async updateMarketAnalysis<T extends Prisma.MarketAnalysisUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MarketAnalysisUpdateArgs>
  ): Promise<PrismaMarketAnalysis> {
    return this.prisma.marketAnalysis.update<T>(args);
  }
  async deleteMarketAnalysis<T extends Prisma.MarketAnalysisDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MarketAnalysisDeleteArgs>
  ): Promise<PrismaMarketAnalysis> {
    return this.prisma.marketAnalysis.delete(args);
  }
}
